// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductsAPI.Contexts;

#nullable disable

namespace ProductsAPI.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20240717141612_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductsAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 101,
                            ImageUrl = "https://paviblobstorage.blob.core.windows.net/product-images/pencil.jpg",
                            Price = 10.050000000000001,
                            ProductDescription = "Wonderful Pencil with various shades available",
                            ProductName = "Pencil"
                        },
                        new
                        {
                            ProductId = 102,
                            ImageUrl = "https://paviblobstorage.blob.core.windows.net/product-images/colorPencil.jpg",
                            Price = 50.049999999999997,
                            ProductDescription = "Wonderful Color Pencils with 7 shades available",
                            ProductName = "Color Pencil"
                        },
                        new
                        {
                            ProductId = 103,
                            ImageUrl = "https://paviblobstorage.blob.core.windows.net/product-images/sketchPen.jpg",
                            Price = 150.05000000000001,
                            ProductDescription = "Wonderful Sketch Pens with 7 colors available",
                            ProductName = "Sketch Pens"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
